#!/bin/bash
###############################################################################
PROCESS_MODULE(){
export MODULE
for MODULE in $*
do
(
exec 2>&1
###############################################################################
#declare -l MAN_EXTENSION  # will be a lowercase value

export PREP_DOCUMENT_DIR=$(realpath $(pwd))
mkdir -p $PREP_DOCUMENT_DIR doc/PRIVATE

export MANOUT=${MANOUT:-$(realpath -m $(pwd)/../../man)}

export DOCS=$(realpath -m $(pwd)/../../docs)
mkdir -p $DOCS

export MAN_EXTENSION=${MODULE,,} # convert string to all lowercase
MAN_EXTENSION=${MAN_EXTENSION_FIXED:-$MAN_EXTENSION}


echo ">>>> MODULE IS                       $MODULE"
echo ">>>> DOCUMENT DIRECTORY IS           $PREP_DOCUMENT_DIR"
echo ">>>> MANPAGES PROCEDURE DIRECTORY IS $MANOUT"
echo ">>>> MAN_EXTENSION IS                $MAN_EXTENSION"
set -xv
###############################################################################
if grep -q '^#' $MODULE.[fF][fF]
then
   SUFFIX=F90
else
   SUFFIX=f90
fi
###############################################################################
if [ "$GITHUB" = '' ]
then
   prep F90 --noenv --comment doxygen --verbose -i $MODULE.[fF][fF] -o ../$MODULE.$SUFFIX
else
   prep F90 GITHUB --noenv --comment doxygen --verbose -i $MODULE.[fF][fF] -o ../$MODULE.$SUFFIX
fi
###############################################################################
if grep -qi '^$IFDEF  *C *$' $MODULE.[fF][fF]
then
   if [ "$GITHUB" = '' ]
   then
      prep C   --noenv --comment doxygen --verbose -i $MODULE.[fF][fF] -o ../C-$MODULE.c
   else
      prep GITHUB C   --noenv --comment doxygen --verbose -i $MODULE.[fF][fF] -o ../C-$MODULE.c
   fi
fi
###############################################################################
( # *.man files to ROFF and HTML
cd doc
set -xv
cat <<EOF
>>>>>>>> .man files to MAN DIRECTORY as ROFF and HTML
>>>>>>>> MANOUT        => $MANOUT
>>>>>>>> MAN_EXTENSION => $MAN_EXTENSiON
>>>>>>>> DOCS          => $DOCS
EOF
# if no grouping or specifically has expected extension as there could be other files here
for NUM in 1 2 3 4 5 6 7 8
do
   mkdir -p $MANOUT/man${NUM}
   for NAME in $(ls *.$NUM.man *.${NUM}${MAN_EXTENSION}.man 2>/dev/null|sort|uniq)
   do
       echo ">>>> processing manpage and HTML for $NAME"
       SHORTNAME_MAN=$MANOUT/man${NUM}/$(basename $NAME .man)
       SHORTNAME=$(basename $NAME .${NUM}${MAN_EXTENSION}.man)
       : SHORTNAME_MAN $SHORTNAME_MAN SHORTNAME $SHORTNAME
       txt2man -s ${NUM}$MAN_EXTENSION -t "$SHORTNAME" $NAME |tee $SHORTNAME_MAN|
       env AUX_FILENAME=$SHORTNAME man2html >$DOCS/$SHORTNAME.${NUM}$MAN_EXTENSION.html
       replace index.html https://github.com/urbanjost/$MODULE -- $DOCS/$SHORTNAME.${NUM}$MAN_EXTENSION.html
       gzip -f $SHORTNAME_MAN
   done
done
)
###############################################################################
# *.txt files to MAN DIRECTORY
(
cat <<EOF
>>>>>>>> .txt files to MAN DIRECTORY
>>>>>>>> MANOUT        => $MANOUT
>>>>>>>> MAN_EXTENSION => $MAN_EXTENSiON
EOF
cd doc
for NUM in 1 2 3 4 5 6 7 8
do
   mkdir -p $MANOUT/man${NUM}
for NAME in $(ls *.$NUM.txt *.${NUM}$MAN_EXTENSION.txt 2>/dev/null|sort|uniq)
   do
      echo ">>>> processing ROFF for $NAME"
      SHORTNAME_MAN=$MANOUT/man${NUM}/$(basename $NAME .txt)
      SHORTNAME=$(basename $NAME .txt)
      : SHORTNAME_MAN $SHORTNAME_MAN SHORTNAME $SHORTNAME
      cp -v $NAME $MANOUT/man${NUM}/$SHORTNAME
      gzip -f $MAN${NUM}/$SHORTNAME
   done
done
)
###############################################################################
( # *.htm files to HTML and ROFF
cd doc
for NUM in 1 2 3 4 5 6 7 8
do
   for NAME in $(ls *.htm 2>/dev/null)
   do
      echo ">>>> processing HTM to HTML for $NAME"
      SHORTNAME=$(basename $NAME .${NUM}$MAN_EXTENSION.htm)
      htm2html <$NAME > $DOCS/$SHORTNAME.${NUM}$MAN_EXTENSION.html
      echo ">>>> processing HTML to manpage for $NAME"
      set -xv
      html2txt $DOCS/$SHORTNAME.${NUM}$MAN_EXTENSION.html |txt2man > $MANOUT/man${NUM}/$(basename $NAME .htm)
      gzip -f $MANOUT/man${NUM}/$(basename $NAME .htm)
   done
done
)
###############################################################################
# *.html files to DOC DIRECTORY
(
cd doc
for NUM in 1 2 3 4 5 6 7 8
do
   for NAME in $(ls *.${NUM}$MAN_EXTENSION.html 2>/dev/null)
   do
      echo ">>>> processing HTML for $NAME"
      cp -v $NAME $DOC/$NAME
   done
done
)
###############################################################################
(
   echo '>>>> Build manpage index'
   cd ../../man || exit
   mandb -c .
   env MANPATH=$(pwd) man -k .
)
###############################################################################
# make easily distributed archive files of manpages
(
   mkdir -p ../../docs
   (
   cd ../../man
   gzip man*/*.?$MAN_EXTENSION*
   zip -r ../docs/manpages.zip */*gz
   tar cvfz ../docs/manpages.tgz */*gz
   gunzip */*.?$MAN_EXTENSION.gz
   )
)
###############################################################################
(
# extract demo pages from manpages
cd $MANOUT || exit
MANPATH=$(pwd)
SECTION=3$MAN_EXTENSION
DEMO_OUTDIR=${DEMO_OUTDIR:-../../test/demos}
GPF_extract_manpage_demos $MANPATH $SECTION $DEMO_OUTDIR
)
###############################################################################
(
cd ..
make clean
make F90=gfortran gfortran
make doxygen
make man
make ship
make help
make clean
)
###############################################################################
( cd ../..;fpm test)
###############################################################################
# make BOOK html document
env MANPATH=../../man mandb -c
env OUTPUT_DIR=../../docs/ \
    MAN_CMD=man  \
    MANPATH=../../man \
 GPF_book $MODULE  $MAN_EXTENSION
###############################################################################
# make HTML index to manpages
env MANPATH=../../man OUTDIR=../../docs GPF_manpage_index
###############################################################################
   spell ../../README.md|xargs -n 8|column -t
###############################################################################
#  update GPF project and documents
(
   unset GITHUB
   make.one libGPF
)
###############################################################################
#  run test
(
   cd ../../test && ccall test_suite_${MODULE}.[fF]90 && test_suite_${MODULE}
)
###############################################################################
if [ -d doc/ ]
then
   GPF_fman $MAN_EXTENSION doc
fi
###############################################################################
) 
done
}
###############################################################################
(
   PROCESS_MODULE $*
)|tee $(basename $0).out
###############################################################################
exit
###############################################################################
