#!/bin/sh
# @(#) Program to generate Makefile from *.f and *.f90 files found in the current working directory.
#
#   Only *.f files are considered in this version of generate_make.
#   no *.h or MODULE or INCLUDE dependencies are generated
#   Coded by Jerry Kennedy 2/23/93
#
################################################################################
if test -f /vmunix
   then
      cmd="nawk"
      echo="/usr/5bin/echo"
   else
      cmd="awk"
      echo="/usr/bin/echo -e"
fi
################################################################################
rm -f Makefile > /dev/null
touch Makefile
cat >> Makefile <<\EOF
#
#   This Makefile was generated by generate_make
#
EOF
################################################################################
fcnt=`ls -1 *.f *.f90 | wc -l | sed 's/^[\ ]*//g'`
$echo "SRCS= \c" >> Makefile
################################################################################
#------------------------------------------------------------------------------#
ls -1 *.f *.f90 | $cmd \
   '{ printf("%s ",$1) >> "Makefile"
      cnt++
      nfls--
      if (cnt > 3) {
         if (nfls != 0) {
            cnt = 0
            printf("\\\n") >> "Makefile"
            printf("      ") >> "Makefile"
         }
      }
   }
   END { printf("\n") >> "Makefile" } ' nfls=$fcnt
#------------------------------------------------------------------------------#
$echo "OBJS= \c" >> Makefile
#------------------------------------------------------------------------------#
ls -1 *.f *.f90 | $cmd -F "." \
   '{ printf("%s.o ",$1) >> "Makefile"
      cnt++
      nfls--
      if (cnt > 3) {
         if (nfls != 0) {
            cnt = 0
            printf("\\\n") >> "Makefile"
            printf("      ") >> "Makefile"
         }
      }
   }
   END { printf("\n") >> "Makefile" } ' nfls=$fcnt
#------------------------------------------------------------------------------#
(
echo " "
echo "#   Start of user modifiable variables"
echo "PRODUCT= a.out"
echo "FC= f90"
echo "LIBS= "
echo "FFLAGS= "
echo "#   End of user modifiable variables"
echo "
echo "all: \$(PRODUCT)"
echo " "
echo "\$(PRODUCT): \$(OBJS)"
$echo "\t\$(FC) \$(FFLAGS) -o \$(@) \$(OBJS) \$(LIBS)"
echo " "
)>> Makefile
#------------------------------------------------------------------------------#
ls -1 *.f 2>/dev/null   > /tmp/f.$$
ls -1 *.f90 2>/dev/null > /tmp/f90.$$
#------------------------------------------------------------------------------#
for FIVE in /tmp/f.$$ /tmp/f90.$$
do
   exec 5<$FIVE
   #while fl=`line <&5`
   while read fl<&5
   do
      echo "SOURCE FILE: $fl" >&2
      echo "$fl" | $cmd -F "." \
         '{ printf("%s.o: ",$1) >> "Makefile"
              switch ($fl) {
              case "*.f":   printf("%s.f ",$1)    >> "Makefile"
                      break;
              case "*.f90": printf("%s.f90 ",$1) >> "Makefile"
                      break;
              }
          }'
      cat $fl | grep -i 'include' | sed 's/[\ ]//g' | $cmd -F "'" \
         'BEGIN { cnt = 2 }
         /^[\t]*[iI][nN][cC][lL][uU][dD][eE]/ {
           if ( NF != 3 ) { next }
           if (cnt == 0 ) {
              printf("\\\n") >> "Makefile"
              printf("\t") >> "Makefile"
           }
           printf("%s ",$2) >> "Makefile"
           cnt++
           if (cnt > 4) { cnt = 0 }
         }
         END { printf("\n") >> "Makefile" } '
      $echo "\t\$(FC) -c $fl" >> Makefile
   done
done
################################################################################
(
   echo " "
   echo "clean:"
   $echo "\t-rm -f \$(OBJS)"
   echo " "
   echo "clear: clean"
   $echo "\t-rm -f \$(PRODUCT)"
   echo " "
   echo "void: clear"
   $echo "\t-rm -f $(SRCS)"
) >> Makefile
################################################################################
rm -f /tmp/f.$$ /tmp/f90.$$
################################################################################
#
#   End of generate_make
#
################################################################################
