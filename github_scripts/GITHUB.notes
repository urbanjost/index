[dependencies.fortran-intrinsic-manpages]
git = "https://github.com/urbanjost/M_intrinsics.git"
rev = "a758ebdd0487e8cab5b4894fbf375f87147c44b5"
use,intrinsic :: iso_fortran_env, only : stderr=>error_unit
use M_intrinsics,     only : help_intrinsics
                   ! note help_intrinsics is returning a fixed-length array
                   ! to avoid compiler issues
                   help_text=[character(len=widest) :: help_text, &
                   & help_intrinsics( lower( unnamed(i) ) ) ]
                   if(size(help_text).eq.0)then
                      help_text=[character(len=widest) :: help_text, &
                      & 'ERROR: unknown help topic "'//trim(unnamed(i))//'"']
                   endif
    '   fpm help [fortran|fortran_manual][FORTRAN_INTRINSIC_NAME]           ', &
    '   INTRINSIC(s)  In addition, Fortran intrinsics can be described.     ', &
    '                 The special name "fortran" prints a list of available ', &
    '                 topics. "fortran_manual" displays all the built-in    ', &
    '                 fortran documentation. Entries should be in           ', &
    '                 uppercase to avoid conflicts with fpm(1) topics;      ', &
    '                 but can be in lowercase if there is no conflict.      ', &
    '   FORTRAN INTRINSICS                                                  ', &
    '   Additional general Fortran documentation                            ', &
    '                                                                       ', &
    '     fpm help SIN COS TAN    # selected Fortran Intrinsic help         ', &
    '     fpm help fortran        # index of Fortran documentation          ', &
    '     fpm help fortran_manual # all Fortran documentation               ', &
#!/bin/bash
# output of files build from a full build
cat \
./src/fpm_environment.f90 \
./src/fpm_strings.f90 \
./src/fpm_filesystem.f90 \
./src/fpm_model.f90 \
./src/fpm_backend.f90 \
./src/fpm/error.f90 \
./src/fpm/git.f90 \
./build/dependencies/toml-f/src/tomlf/constants.f90 \
./build/dependencies/toml-f/src/tomlf/error.f90 \
./build/dependencies/toml-f/src/tomlf/datetime.f90 \
./build/dependencies/toml-f/src/tomlf/utils/verify.f90 \
./build/dependencies/toml-f/src/tomlf/utils/convert.f90 \
./build/dependencies/toml-f/src/tomlf/utils.f90 \
./build/dependencies/toml-f/src/tomlf/type/value.f90 \
./build/dependencies/toml-f/src/tomlf/structure/base.f90 \
./build/dependencies/toml-f/src/tomlf/structure/vector.f90 \
./build/dependencies/toml-f/src/tomlf/structure.f90 \
./build/dependencies/toml-f/src/tomlf/type/array.f90 \
./build/dependencies/toml-f/src/tomlf/type/keyval.f90 \
./build/dependencies/toml-f/src/tomlf/type/table.f90 \
./build/dependencies/toml-f/src/tomlf/type.f90 \
./build/dependencies/toml-f/src/tomlf/build/keyval.f90 \
./build/dependencies/toml-f/src/tomlf/build/array.f90 \
./build/dependencies/toml-f/src/tomlf/build/table.f90 \
./build/dependencies/toml-f/src/tomlf/build.f90 \
./build/dependencies/toml-f/src/tomlf/de/tokenizer.f90 \
./build/dependencies/toml-f/src/tomlf/de/character.f90 \
./build/dependencies/toml-f/src/tomlf/de.f90 \
./build/dependencies/toml-f/src/tomlf/ser.f90 \
./build/dependencies/toml-f/src/tomlf/version.f90 \
./build/dependencies/toml-f/src/tomlf.f90 \
./src/fpm/toml.f90 \
./src/fpm/manifest/dependency.f90 \
./src/fpm/manifest/executable.f90 \
./src/fpm_sources.f90 \
./build/dependencies/M_CLI2/src/M_CLI2.f90 \
./build/dependencies/fortran-intrinsic-manpages/src/M_intrinsics.f90 \
./src/fpm_command_line.f90 \
./src/fpm/manifest/build_config.f90 \
./src/fpm/manifest/library.f90 \
./src/fpm/manifest/test.f90 \
./src/fpm/versioning.f90 \
./src/fpm/manifest/package.f90 \
./src/fpm/manifest.f90 \
./src/fpm.f90 \
./src/fpm/cmd/new.f90 \
./build/dependencies/toml-f/src/tomlf/all.f90 \
./app/main.f90 \
> ffpm.f08
replace include_ inc_ -- ffpm.f08
mkdir /tmp/scratch
gfortran ffpm.f08 -J /tmp/scratch -o ffpm.exe
exit
git clone https://github.com/urbanjost/fpm
cd fpm/fpm
git checkout -b $USER
git remote add upstream https://github.com/fortran-lang/fpm
git checkout -b $USER
git status

cat <<\EOF
git add registry.toml
git commit -S -m "Adding to registry.toml"
git push -u origin $USER
#Once you push the changes to your repo, the Compare & pull request button will appear in GitHub.

#compare-and-pull-request-button.png
#GitHub's Compare & Pull Request button

#Click it and you'll be taken to this screen:

#open-a-pull-request_crop.png
#GitHub's Open pull request button

#Open a pull request by clicking the Create pull request button.
EOF
###############################################################################
I think a good implementation of a data frame. That is, a rectangular
array where each column is one homogenous type - integer, character etc,
but each column can be of any type. These exist in R, Pandas, Julia
etc, and are the workhorse for statistical analysis. One will encounter
arguments about whether this should all be in a "real database", and so
you just need to provide appropriate Fortran interfaces, but the continued
success of R, Pandas etc is a potent counter. For speed, there do have
to be indices and hashes under the bonnet, and optimized sorts, joins,
Fortran array type slices, and so on.
###############################################################################
